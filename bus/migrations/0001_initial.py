# Generated by Django 4.2.7 on 2023-11-25 11:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.IntegerField(max_length=100, unique=True)),
                ('user_type', models.IntegerField(choices=[(0, 'Root'), (1, 'Company'), (2, 'Staff'), (3, 'Users')], default=0)),
                ('phone_number', models.CharField(max_length=500)),
                ('nid_number', models.CharField(blank=True, max_length=100)),
                ('city_name', models.CharField(blank=True, max_length=100)),
                ('zip_code', models.CharField(blank=True, max_length=10)),
                ('nid_image', models.ImageField(blank=True, upload_to='nid_images')),
                ('address', models.TextField(blank=True)),
                ('last_active', models.DateTimeField(default=django.utils.timezone.now)),
                ('profile_picture', models.ImageField(upload_to='profile_pictures')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BoardingPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_number', models.CharField(max_length=10)),
                ('price', models.IntegerField()),
                ('is_booked', models.BooleanField(default=False)),
                ('is_paid', models.BooleanField(default=False)),
                ('pnr', models.CharField(max_length=8, unique=True)),
                ('booking_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_type', models.CharField(choices=[('CC', 'Chair Coach'), ('SIP', 'Sleeping Coach'), ('DD', 'Double Decker')], max_length=10)),
                ('number_or_column', models.CharField(choices=[('9', '9'), ('10', '10'), ('11', '11')], max_length=2)),
                ('bus_number', models.CharField(max_length=20)),
                ('seat_type_1', models.CharField(blank=True, max_length=20)),
                ('seat_type_2', models.CharField(blank=True, max_length=20)),
                ('seat_type_3', models.CharField(blank=True, max_length=20)),
                ('extra_seat', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('total_seats', models.IntegerField()),
                ('class_type', models.CharField(choices=[('AC', 'AC'), ('Non-AC', 'Non-AC')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='BusStop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coachnumber', models.IntegerField()),
                ('coachtype', models.CharField(max_length=300, verbose_name='Type')),
                ('coachmodelname', models.CharField(max_length=400, verbose_name='Model')),
                ('is_marked', models.BooleanField(default=False)),
                ('arrivaltime', models.TimeField(verbose_name='Arv.Time')),
                ('depraturetime', models.TimeField(blank=True, null=True, verbose_name='Dep.Time')),
                ('returndate', models.DateField(blank=True, null=True)),
                ('cancellation_policy', models.TextField(blank=True, default='We Provide You All TLD Domain Services In Low Cost. Just you can make an order using our online billing, we will activate your domain within a few minutes.')),
                ('boarding_points', models.ManyToManyField(blank=True, null=True, to='bus.boardingpoint')),
                ('bus', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.bus')),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company_id', models.CharField(max_length=100, unique=True)),
                ('user_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('is_suspended', models.BooleanField(default=False)),
                ('root_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PermissionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.IntegerField()),
                ('travel_time', models.DurationField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('end_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_routes', to='bus.busstop')),
                ('intermediate_stops', models.ManyToManyField(blank=True, related_name='intermediate_routes', to='bus.busstop')),
                ('start_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_routes', to='bus.busstop')),
            ],
        ),
        migrations.CreateModel(
            name='StaffType',
            fields=[
                ('name', models.CharField(choices=[('Inventory', 'Inventory'), ('Accounts', 'Accounts'), ('HR', 'HR'), ('Software Engineer', 'Software Engineer'), ('Employee', 'Employee')], max_length=20, primary_key=True, serialize=False)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(max_length=15)),
                ('date_visited', models.DateTimeField(auto_now_add=True)),
                ('page_visited', models.CharField(max_length=255)),
                ('browser', models.CharField(max_length=255)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regi_number', models.CharField(max_length=20, unique=True)),
                ('fleet_type', models.CharField(max_length=20)),
                ('eng_number', models.CharField(max_length=20)),
                ('model_name', models.CharField(max_length=100)),
                ('chassis_number', models.CharField(max_length=50)),
                ('driver_number', models.CharField(max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Upazila',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.district')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.division')),
            ],
        ),
        migrations.CreateModel(
            name='Union',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.district')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.division')),
                ('upazila', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.upazila')),
            ],
        ),
        migrations.CreateModel(
            name='TicketBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seats', models.CharField(max_length=200)),
                ('total_price', models.IntegerField()),
                ('reservation_date', models.DateTimeField(auto_now_add=True)),
                ('boarding_point', models.CharField(max_length=200)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Thana',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.district')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.division')),
            ],
        ),
        migrations.CreateModel(
            name='TermsAndConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Tax',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_name', models.CharField(max_length=100)),
                ('tax_value', models.DecimalField(decimal_places=2, help_text='Enter the tax value as a percentage.', max_digits=5)),
                ('tax_number', models.CharField(max_length=10, unique=True)),
                ('status', models.IntegerField(choices=[(1, 'Active'), (0, 'Disabled')], default=1)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Staffs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('staff_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bus.stafftype')),
            ],
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_type', models.CharField(choices=[('seat_type_1', '1:1'), ('seat_type_2', '1:2'), ('seat_type_3', '2:2'), ('mixed', 'Mixed (1:1 + 1:2 + 2:2)')], max_length=20)),
                ('row_number', models.PositiveIntegerField()),
                ('seat_number', models.CharField(max_length=2)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='bus.bus')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='RoutePart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('coach', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='route_parts', to='bus.coach')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('end_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='end_route_parts', to='bus.busstop')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parts', to='bus.route')),
                ('start_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_route_parts', to='bus.busstop')),
            ],
        ),
        migrations.CreateModel(
            name='RootUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('username', models.CharField(blank=True, max_length=5, null=True)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=500, null=True)),
                ('custom_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('refund_reason', models.TextField()),
                ('date_requested', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('date_approved', models.DateTimeField(blank=True, null=True)),
                ('booking', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bus.booking')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='PropularRoutes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fromdescription', models.CharField(max_length=2000)),
                ('todescription', models.CharField(max_length=2000)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.route')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile_number', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('nid', models.CharField(blank=True, max_length=255, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=255, null=True)),
                ('postcode', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, choices=[('DH', 'Dhaka'), ('CTG', 'Chittagong'), ('RS', 'Rajshahi'), ('KH', 'Khulna'), ('SYL', 'Sylhet'), ('BAR', 'Barisal')], max_length=255, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PopupDuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_minutes', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('date_paid', models.DateTimeField(auto_now_add=True)),
                ('payment_status', models.CharField(default='Unpaid', max_length=20)),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.booking')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('payment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.paymentmethod')),
            ],
        ),
        migrations.CreateModel(
            name='JourneyDateHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('journey_date', models.DateField(blank=True, null=True)),
                ('upcoming_schedule', models.BooleanField(default=False)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400)),
                ('email', models.EmailField(max_length=400)),
                ('mobile', models.CharField(max_length=400)),
                ('subject', models.TextField()),
                ('details', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255)),
                ('answer', models.TextField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.category')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='division',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.division'),
        ),
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.permissioncategory')),
                ('permissions', models.ManyToManyField(to='auth.permission')),
            ],
        ),
        migrations.CreateModel(
            name='Customers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=150, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('id_type', models.CharField(blank=True, max_length=100, null=True)),
                ('nid', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.TextField(blank=True, max_length=250, null=True)),
                ('country', models.CharField(blank=True, max_length=150, null=True)),
                ('state', models.CharField(blank=True, max_length=150, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Counter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_name', models.CharField(blank=True, max_length=150, null=True)),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('credit_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10, null=True, verbose_name='Credit Card Balance')),
                ('phone_numbers', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.district')),
                ('manager', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('thana', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.thana')),
                ('union', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.union')),
            ],
        ),
        migrations.CreateModel(
            name='contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=1000)),
                ('phonenumber', models.IntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('application', models.CharField(choices=[('GENERAL', 'General'), ('BUS', 'Bus Service')], max_length=50)),
                ('description', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='company',
            name='staff_types',
            field=models.ManyToManyField(to='bus.stafftype'),
        ),
        migrations.AddField(
            model_name='coach',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company'),
        ),
        migrations.AddField(
            model_name='coach',
            name='facilities',
            field=models.ManyToManyField(blank=True, to='bus.facility'),
        ),
        migrations.AddField(
            model_name='coach',
            name='journey_dates',
            field=models.ManyToManyField(null=True, to='bus.journeydatehistory'),
        ),
        migrations.AddField(
            model_name='coach',
            name='routes',
            field=models.ManyToManyField(to='bus.route'),
        ),
        migrations.AddField(
            model_name='coach',
            name='staffs',
            field=models.ManyToManyField(blank=True, related_name='coaches', to='bus.staffs'),
        ),
        migrations.CreateModel(
            name='Click',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='category',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company'),
        ),
        migrations.CreateModel(
            name='CancelTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Approved', 'Approved'), ('Rejected', 'Rejected')], max_length=10)),
                ('cancel_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_type', models.CharField(max_length=50)),
                ('payment_details', models.TextField()),
                ('booking', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.booking')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
            ],
        ),
        migrations.AddField(
            model_name='busstop',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company'),
        ),
        migrations.AddField(
            model_name='busstop',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bus_stops', to='bus.district'),
        ),
        migrations.CreateModel(
            name='BusFitness',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fitness_name', models.CharField(max_length=100)),
                ('reg_no', models.CharField(max_length=20)),
                ('fitness_start_date', models.DateField()),
                ('fitness_end_date', models.DateField()),
                ('start_mileage', models.PositiveIntegerField()),
                ('end_mileage', models.PositiveIntegerField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.vehicle')),
            ],
        ),
        migrations.AddField(
            model_name='bus',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company'),
        ),
        migrations.AddField(
            model_name='booking',
            name='coach',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.coach'),
        ),
        migrations.AddField(
            model_name='booking',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company'),
        ),
        migrations.AddField(
            model_name='booking',
            name='customer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bus.customers'),
        ),
        migrations.AddField(
            model_name='booking',
            name='journey_date',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='bus.journeydatehistory'),
        ),
        migrations.AddField(
            model_name='booking',
            name='payment_method',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='bus.paymentmethod'),
        ),
        migrations.AddField(
            model_name='booking',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.route'),
        ),
        migrations.AddField(
            model_name='booking',
            name='route_part',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.routepart'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='boardingpoint',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bus.company'),
        ),
        migrations.AddField(
            model_name='boardingpoint',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boarding_points', to='bus.route'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='custom_users', to='bus.company'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='staff_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bus.stafftype'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
